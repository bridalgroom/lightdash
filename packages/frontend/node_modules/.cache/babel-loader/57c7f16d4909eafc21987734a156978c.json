{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./classes\"; // eslint-disable-next-line import/no-cycle\n\nimport { Popover2, Popover2InteractionKind } from \"./popover2\";\nimport { TOOLTIP_ARROW_SVG_SIZE } from \"./popover2Arrow\";\n\nvar Tooltip2 =\n/** @class */\nfunction (_super) {\n  __extends(Tooltip2, _super);\n\n  function Tooltip2() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.popover = null;\n    return _this;\n  }\n\n  Tooltip2.prototype.render = function () {\n    var _a;\n\n    var _this = this;\n\n    var _b = this.props,\n        children = _b.children,\n        intent = _b.intent,\n        popoverClassName = _b.popoverClassName,\n        restProps = __rest(_b, [\"children\", \"intent\", \"popoverClassName\"]);\n\n    var classes = classNames(Classes.TOOLTIP2, (_a = {}, _a[CoreClasses.MINIMAL] = this.props.minimal, _a), CoreClasses.intentClass(intent), popoverClassName);\n    return React.createElement(Popover2, __assign({\n      interactionKind: Popover2InteractionKind.HOVER_TARGET_ONLY,\n      modifiers: {\n        arrow: {\n          enabled: !this.props.minimal\n        },\n        offset: {\n          options: {\n            offset: [0, TOOLTIP_ARROW_SVG_SIZE / 2]\n          }\n        }\n      }\n    }, restProps, {\n      autoFocus: false,\n      canEscapeKeyClose: false,\n      enforceFocus: false,\n      lazy: true,\n      popoverClassName: classes,\n      portalContainer: this.props.portalContainer,\n      ref: function (ref) {\n        return _this.popover = ref;\n      }\n    }), children);\n  };\n\n  Tooltip2.prototype.reposition = function () {\n    if (this.popover != null) {\n      this.popover.reposition();\n    }\n  };\n\n  Tooltip2.displayName = DISPLAYNAME_PREFIX + \".Tooltip2\";\n  Tooltip2.defaultProps = {\n    hoverCloseDelay: 0,\n    hoverOpenDelay: 100,\n    minimal: false,\n    transitionDuration: 100\n  };\n  return Tooltip2;\n}(React.PureComponent);\n\nexport { Tooltip2 };","map":{"version":3,"sources":["../../src/tooltip2.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA,SAAS,OAAO,IAAI,WAApB,EAAiC,kBAAjC,QAAyE,mBAAzE;AAEA,OAAO,KAAK,OAAZ,MAAyB,WAAzB,C,CACA;;AACA,SAAS,QAAT,EAAmB,uBAAnB,QAAkD,YAAlD;AACA,SAAS,sBAAT,QAAuC,iBAAvC;;AAiDA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAUY,IAAA,KAAA,CAAA,OAAA,GAA8B,IAA9B;;AA2CX;;AAzCU,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AAAA,QAAA,KAAA,GAAA,IAAA;;AACI,QAAM,EAAA,GAAuD,KAAK,KAAlE;AAAA,QAAQ,QAAQ,GAAA,EAAA,CAAA,QAAhB;AAAA,QAAkB,MAAM,GAAA,EAAA,CAAA,MAAxB;AAAA,QAA0B,gBAAgB,GAAA,EAAA,CAAA,gBAA1C;AAAA,QAA+C,SAAS,GAAA,MAAA,CAAA,EAAA,EAAlD,CAAA,UAAA,EAAA,QAAA,EAAA,kBAAA,CAAkD,CAAxD;;AACA,QAAM,OAAO,GAAG,UAAU,CACtB,OAAO,CAAC,QADc,GACN,EAAA,GAAA,EAAA,EACd,EAAA,CAAC,WAAW,CAAC,OAAb,CAAA,GAAuB,KAAK,KAAL,CAAW,OADpB,EAC2B,EAFrB,GAGtB,WAAW,CAAC,WAAZ,CAAwB,MAAxB,CAHsB,EAItB,gBAJsB,CAA1B;AAOA,WACI,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA;AACL,MAAA,eAAe,EAAE,uBAAuB,CAAC,iBADpC;AAEL,MAAA,SAAS,EAAE;AACP,QAAA,KAAK,EAAE;AACH,UAAA,OAAO,EAAE,CAAC,KAAK,KAAL,CAAW;AADlB,SADA;AAIP,QAAA,MAAM,EAAE;AACJ,UAAA,OAAO,EAAE;AACL,YAAA,MAAM,EAAE,CAAC,CAAD,EAAI,sBAAsB,GAAG,CAA7B;AADH;AADL;AAJD;AAFN,KAAA,EAYD,SAZC,EAYQ;AACb,MAAA,SAAS,EAAE,KADE;AAEb,MAAA,iBAAiB,EAAE,KAFN;AAGb,MAAA,YAAY,EAAE,KAHD;AAIb,MAAA,IAAI,EAAE,IAJO;AAKb,MAAA,gBAAgB,EAAE,OALL;AAMb,MAAA,eAAe,EAAE,KAAK,KAAL,CAAW,eANf;AAOb,MAAA,GAAG,EAAE,UAAA,GAAA,EAAG;AAAI,eAAC,KAAI,CAAC,OAAL,GAAD,GAAA;AAAoB;AAPnB,KAZR,CAAT,EAqBK,QArBL,CADJ;AAyBH,GAlCM;;AAoCA,EAAA,QAAA,CAAA,SAAA,CAAA,UAAA,GAAP,YAAA;AACI,QAAI,KAAK,OAAL,IAAgB,IAApB,EAA0B;AACtB,WAAK,OAAL,CAAa,UAAb;AACH;AACJ,GAJM;;AA/CO,EAAA,QAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,WAAnC;AAEA,EAAA,QAAA,CAAA,YAAA,GAAwC;AAClD,IAAA,eAAe,EAAE,CADiC;AAElD,IAAA,cAAc,EAAE,GAFkC;AAGlD,IAAA,OAAO,EAAE,KAHyC;AAIlD,IAAA,kBAAkB,EAAE;AAJ8B,GAAxC;AAkDlB,SAAA,QAAA;AAAC,CArDD,CAAiC,KAAK,CAAC,aAAvC,CAAA;;SAAa,Q","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Classes as CoreClasses, DISPLAYNAME_PREFIX } from \"@blueprintjs/core\";\nimport * as Classes from \"./classes\";\n// eslint-disable-next-line import/no-cycle\nimport { Popover2, Popover2InteractionKind } from \"./popover2\";\nimport { TOOLTIP_ARROW_SVG_SIZE } from \"./popover2Arrow\";\nvar Tooltip2 = /** @class */ (function (_super) {\n    __extends(Tooltip2, _super);\n    function Tooltip2() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.popover = null;\n        return _this;\n    }\n    Tooltip2.prototype.render = function () {\n        var _a;\n        var _this = this;\n        var _b = this.props, children = _b.children, intent = _b.intent, popoverClassName = _b.popoverClassName, restProps = __rest(_b, [\"children\", \"intent\", \"popoverClassName\"]);\n        var classes = classNames(Classes.TOOLTIP2, (_a = {}, _a[CoreClasses.MINIMAL] = this.props.minimal, _a), CoreClasses.intentClass(intent), popoverClassName);\n        return (React.createElement(Popover2, __assign({ interactionKind: Popover2InteractionKind.HOVER_TARGET_ONLY, modifiers: {\n                arrow: {\n                    enabled: !this.props.minimal,\n                },\n                offset: {\n                    options: {\n                        offset: [0, TOOLTIP_ARROW_SVG_SIZE / 2],\n                    },\n                },\n            } }, restProps, { autoFocus: false, canEscapeKeyClose: false, enforceFocus: false, lazy: true, popoverClassName: classes, portalContainer: this.props.portalContainer, ref: function (ref) { return (_this.popover = ref); } }), children));\n    };\n    Tooltip2.prototype.reposition = function () {\n        if (this.popover != null) {\n            this.popover.reposition();\n        }\n    };\n    Tooltip2.displayName = DISPLAYNAME_PREFIX + \".Tooltip2\";\n    Tooltip2.defaultProps = {\n        hoverCloseDelay: 0,\n        hoverOpenDelay: 100,\n        minimal: false,\n        transitionDuration: 100,\n    };\n    return Tooltip2;\n}(React.PureComponent));\nexport { Tooltip2 };\n//# sourceMappingURL=tooltip2.js.map"]},"metadata":{},"sourceType":"module"}
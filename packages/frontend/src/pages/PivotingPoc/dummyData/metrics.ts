import { FieldType, MetricType, PivotData } from '@lightdash/common';

const METRICS_DUMMY_DATA: PivotData['metrics'] = {
    // customers
    customers_dbt_derived: {
        sql: '${unique_customer_count} / ${unique_customer_count}',
        name: 'dbt_derived',
        type: MetricType.NUMBER,
        index: 2,
        label: 'dbt_derived',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: '',
        isAutoGenerated: false,
    },
    customers_dbt_expression: {
        sql: '${unique_customer_count} / ${unique_customer_count}',
        name: 'dbt_expression',
        type: MetricType.NUMBER,
        index: 1,
        label: 'dbt_expression',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: 'derived metric in v1.2 ( deprecated )',
        isAutoGenerated: false,
    },
    customers_lightdash_derived: {
        sql: '${unique_customer_count} / ${unique_customer_count}',
        name: 'lightdash_derived',
        type: MetricType.NUMBER,
        index: 3,
        label: 'Lightdash derived',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: 'Number of Customer id',
        isAutoGenerated: false,
    },
    customers_unique_customer_count: {
        sql: '${TABLE}.customer_id',
        name: 'unique_customer_count',
        type: MetricType.COUNT_DISTINCT,
        index: 0,
        label: 'Unique customer count',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: 'Total number of customers',
        isAutoGenerated: false,
    },
    customers_date_of_first_created_customer: {
        sql: '${TABLE}.created',
        name: 'date_of_first_created_customer',
        type: MetricType.MIN,
        index: 4,
        label: 'Date of first created customer',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: 'Min of Created',
        isAutoGenerated: false,
    },
    customers_date_of_most_recent_created_customer: {
        sql: '${TABLE}.created',
        name: 'date_of_most_recent_created_customer',
        type: MetricType.MAX,
        index: 5,
        label: 'Date of most recent created customer',
        table: 'customers',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Customers',
        description: 'Max of Created',
        isAutoGenerated: false,
    },

    // orders
    orders_fulfillment_rate: {
        sql: 'CASE WHEN ${is_completed} THEN 1 ELSE 0 END',
        name: 'fulfillment_rate',
        type: MetricType.AVERAGE,
        index: 2,
        label: 'Fulfillment rate',
        round: 1,
        table: 'orders',
        format: 'percent',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Average of Is completed',
        isAutoGenerated: false,
    },
    orders_average_order_size: {
        sql: '${TABLE}.amount',
        name: 'average_order_size',
        type: MetricType.AVERAGE,
        index: 5,
        label: 'Average order size',
        round: 2,
        table: 'orders',
        format: 'usd',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Average of Amount',
        isAutoGenerated: false,
    },
    orders_total_order_amount: {
        sql: '${TABLE}.amount',
        name: 'total_order_amount',
        type: MetricType.SUM,
        index: 6,
        label: 'Total order amount',
        round: 2,
        table: 'orders',
        format: 'usd',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Sum of Amount',
        isAutoGenerated: false,
    },
    orders_unique_order_count: {
        sql: '${TABLE}.order_id',
        name: 'unique_order_count',
        type: MetricType.COUNT_DISTINCT,
        index: 1,
        label: 'Unique order count',
        table: 'orders',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Count distinct of Order id',
        isAutoGenerated: false,
    },
    orders_date_of_first_order: {
        sql: '${TABLE}.order_date',
        name: 'date_of_first_order',
        type: MetricType.MIN,
        index: 3,
        label: 'Date of first order',
        table: 'orders',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Min of Order date',
        isAutoGenerated: false,
    },
    orders_completed_order_count: {
        sql: 'CASE WHEN (${TABLE}.is_completed = true) THEN ${TABLE}.order_id ELSE NULL END',
        name: 'completed_order_count',
        type: MetricType.COUNT_DISTINCT,
        index: 0,
        label: 'Completed order count',
        table: 'orders',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Total number of completed orders',
        isAutoGenerated: false,
    },
    orders_date_of_most_recent_order: {
        sql: '${TABLE}.order_date',
        name: 'date_of_most_recent_order',
        type: MetricType.MAX,
        index: 4,
        label: 'Date of most recent order',
        table: 'orders',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Max of Order date',
        isAutoGenerated: false,
    },
    orders_total_completed_order_amount: {
        sql: '${TABLE}.amount',
        name: 'total_completed_order_amount',
        type: MetricType.SUM,
        index: 7,
        label: 'Total completed order amount',
        round: 2,
        table: 'orders',
        format: 'usd',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Sum of Amount',
        isAutoGenerated: false,
    },
    orders_total_non_completed_order_amount: {
        sql: '${total_order_amount}-${total_completed_order_amount}',
        name: 'total_non_completed_order_amount',
        type: MetricType.NUMBER,
        index: 8,
        label: 'Total non completed order amount',
        round: 2,
        table: 'orders',
        format: 'usd',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Orders',
        description: 'Number of Amount',
        isAutoGenerated: false,
    },

    // payments
    payments_total_revenue: {
        sql: '${TABLE}.amount',
        name: 'total_revenue',
        type: MetricType.SUM,
        index: 1,
        label: 'Total revenue',
        table: 'payments',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Payments',
        description: 'Sum of all payments',
        isAutoGenerated: false,
    },
    payments_unique_payment_count: {
        sql: '${TABLE}.payment_id',
        name: 'unique_payment_count',
        type: MetricType.COUNT_DISTINCT,
        index: 0,
        label: 'Unique payment count',
        table: 'payments',
        hidden: false,
        fieldType: FieldType.METRIC,
        tableLabel: 'Payments',
        description: 'count of all payments',
        isAutoGenerated: false,
    },
};

export { METRICS_DUMMY_DATA };

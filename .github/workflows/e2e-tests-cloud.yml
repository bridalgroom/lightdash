name: Cypress Tests
on: [ deployment_status ]
jobs:
  cypress-cloud-run:
    # Only trigger for correct environment and status
    if: ${{ github.event.deployment_status.state == 'success' && (contains(github.event.deployment.environment, '- lightdash PR ') || contains(github.event.deployment.environment, '- lightdash-')) }}
    runs-on: ubuntu-latest
    # Runs tests in parallel with matrix strategy https://docs.cypress.io/guides/guides/parallelization
    # https://docs.github.com/en/actions/using-jobs/using-a-matrix-for-your-jobs
    # Also see warning here https://github.com/cypress-io/github-action#parallel
    strategy:
      fail-fast: false # https://github.com/cypress-io/github-action/issues/48
      matrix:
        containers: [1, 2, 3, 4] # Uses 4 parallel instances
    steps:
      - name: Get PR number
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '[0-9]+$'
          regex_flags: 'gm'
          search_string: ${{github.event.deployment.environment}}
      - name: Get deployment url
        id: deployment_url
        env:
          DEPLOYMENT_URL: 'https://lightdash-pr-${{steps.regex.outputs.first_match}}.onrender.com'
        run:
          echo "::set-output name=url::$DEPLOYMENT_URL"
      - name: Checkout
        uses: actions/checkout@v3
      # Install and build Common package
      - name: Install packages/common modules
        run: yarn workspace @lightdash/common install
      - name: Build packages/common module
        run: yarn common-build
      # Install NPM dependencies, cache them correctly
      # and run all Cypress tests
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "credentials.json"
          json: ${{ secrets.GCP_CREDENTIALS }}
          dir: "./packages/e2e/cypress/fixtures/"
      - name: Cypress run
        # Uses the official Cypress GitHub action https://github.com/cypress-io/github-action
        uses: cypress-io/github-action@v4
        with:
          # Records to Cypress Cloud
          # https://docs.cypress.io/guides/cloud/projects#Set-up-a-project-to-record
          record: true
          parallel: true # Runs test in parallel using settings above
          project: ./packages/e2e
          spec: packages/e2e/cypress/e2e/**/*
          # Set the PR deployment url
          config: 'baseUrl=${{steps.deployment_url.outputs.url}}'
        env:
          # For recording and parallelization to work you must set your CYPRESS_RECORD_KEY
          # in GitHub repo → Settings → Secrets → Actions
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Creating a token https://docs.github.com/en/authentication/keeping-your-account-and-data-secure/creating-a-personal-access-token
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CYPRESS_PGHOST: ${{secrets.PGHOST}}
          CYPRESS_PGPASSWORD: ${{secrets.PGPASSWORD}}
          CYPRESS_DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
          CYPRESS_DATABRICKS_PATH: ${{secrets.DATABRICKS_PATH}}
          CYPRESS_DATABRICKS_TOKEN: ${{secrets.DATABRICKS_TOKEN}}
          CYPRESS_SNOWFLAKE_ACCOUNT: ${{secrets.SNOWFLAKE_ACCOUNT}}
          CYPRESS_SNOWFLAKE_USER: ${{secrets.SNOWFLAKE_USER}}
          CYPRESS_SNOWFLAKE_PASSWORD: ${{secrets.SNOWFLAKE_PASSWORD}}
          CYPRESS_TRINO_HOST: ${{secrets.TRINO_HOST}}
          CYPRESS_TRINO_PORT: ${{secrets.TRINO_PORT}}
          CYPRESS_TRINO_USER: ${{secrets.TRINO_USER}}
          CYPRESS_TRINO_PASSWORD: ${{secrets.TRINO_PASSWORD}}
          TZ: 'UTC'
          CYPRESS_TZ: 'UTC'

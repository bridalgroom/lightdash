name: End-to-end tests
on: [ deployment_status ]
jobs:
  prepare-preview:
    # Only trigger for correct environment and status
    if: ${{ github.event.deployment_status.state == 'success' && (contains(github.event.deployment.environment, '- lightdash PR ') || contains(github.event.deployment.environment, '- lightdash-')) }}
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.deployment-url.outputs.url }}
    steps:
      - name: Get PR number
        id: regex
        uses: AsasInnab/regex-action@v1
        with:
          regex_pattern: '[0-9]+$'
          regex_flags: 'gm'
          search_string: ${{github.event.deployment.environment}}
      - name: Get deployment url
        id: deployment-url
        run: echo "url=https://lightdash-pr-${{steps.regex.outputs.first_match}}.onrender.com" >> "$GITHUB_OUTPUT"
  prepare-build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Install packages/common modules
        run: yarn workspace @lightdash/common install --pure-lockfile
      - name: Build packages/common module
        run: yarn common-build

      - name: Save node_modules folder
        uses: actions/upload-artifact@v3
        with:
          name: common-build
          if-no-files-found: error
          path: packages/common/dist
  app-tests:
    runs-on: ubuntu-latest
    needs: [prepare-preview,prepare-build]
    container:
      image: cypress/browsers:node18.12.0-chrome107
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        containers: [ 1, 2, 3, 4, 5 ]
    name: App (${{ matrix.containers }}/${{ strategy.job-total }})
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: common-build
          path: packages/common/dist
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "credentials.json"
          json: ${{ secrets.GCP_CREDENTIALS }}
          dir: "./packages/e2e/cypress/fixtures/"
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          browser: chrome
          project: ./packages/e2e
          spec: packages/e2e/cypress/e2e/**/*
          # Set the PR deployment url
          config: 'baseUrl=${{needs.prepare-preview.outputs.url}}'
        env:
          SPLIT: ${{ strategy.job-total }}
          SPLIT_INDEX: ${{ strategy.job-index }}
          CYPRESS_PGHOST: ${{secrets.PGHOST}}
          CYPRESS_PGPASSWORD: ${{secrets.PGPASSWORD}}
          CYPRESS_DATABRICKS_HOST: ${{secrets.DATABRICKS_HOST}}
          CYPRESS_DATABRICKS_PATH: ${{secrets.DATABRICKS_PATH}}
          CYPRESS_DATABRICKS_TOKEN: ${{secrets.DATABRICKS_TOKEN}}
          CYPRESS_SNOWFLAKE_ACCOUNT: ${{secrets.SNOWFLAKE_ACCOUNT}}
          CYPRESS_SNOWFLAKE_USER: ${{secrets.SNOWFLAKE_USER}}
          CYPRESS_SNOWFLAKE_PASSWORD: ${{secrets.SNOWFLAKE_PASSWORD}}
          CYPRESS_TRINO_HOST: ${{secrets.TRINO_HOST}}
          CYPRESS_TRINO_PORT: ${{secrets.TRINO_PORT}}
          CYPRESS_TRINO_USER: ${{secrets.TRINO_USER}}
          CYPRESS_TRINO_PASSWORD: ${{secrets.TRINO_PASSWORD}}
          TZ: 'UTC'
          CYPRESS_TZ: 'UTC'

      # After the test run completes
      # store videos and any screenshots
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-and-videos-{{ strategy.job-index }}
          path: |
            packages/e2e/cypress/screenshots
            packages/e2e/cypress/videos
          if-no-files-found: ignore

  timezone-tests:
    runs-on: ubuntu-latest
    needs: [prepare-preview,prepare-build]
    container:
      image: cypress/browsers:node18.12.0-chrome107
      options: --user 1001
    strategy:
      fail-fast: false
      matrix:
        timezone: ['UTC', 'America/New_York', 'Europe/Madrid', 'Asia/Tokyo' ]
    name: Timezone (${{ matrix.timezone }})
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Download the build folder
        uses: actions/download-artifact@v3
        with:
          name: common-build
          path: packages/common/dist
      - name: create-json
        id: create-json
        uses: jsdaniell/create-json@1.1.2
        with:
          name: "credentials.json"
          json: ${{ secrets.GCP_CREDENTIALS }}
          dir: "./packages/e2e/cypress/fixtures/"
      - name: Cypress run
        uses: cypress-io/github-action@v5
        with:
          project: ./packages/e2e
          spec: packages/e2e/cypress/e2e/dates.cy.ts
          # Set the PR deployment url
          config: 'baseUrl=${{needs.prepare-preview.outputs.url}}'
        env:
          TZ: ${{ matrix.timezone }}
          CYPRESS_TZ: ${{ matrix.timezone }}

      # After the test run completes
      # store videos and any screenshots
      - uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: cypress-screenshots-and-videos-timezone-${{ strategy.job-index }}
          path: |
            packages/e2e/cypress/screenshots
            packages/e2e/cypress/videos
          if-no-files-found: ignore
